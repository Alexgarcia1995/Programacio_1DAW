package modules.user.utils.admin.utils;

import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.text.Annotation;
import java.util.ArrayList;

import javax.swing.JOptionPane;

import org.codehaus.jettison.json.JSONArray;
import org.codehaus.jettison.json.JSONObject;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonIOException;
import com.google.gson.JsonParser;
import com.google.gson.JsonSyntaxException;
import com.google.gson.stream.JsonReader;
import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.annotations.Annotations;
import com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver;

import modules.user.classes.Admin;
import modules.user.classes.Singleton;

public class open_auto {
	public static ArrayList<Admin> openxml() {
        String PATH;

        try {
            XStream xstream = new XStream();
            Annotations.configureAliases(xstream, Admin.class);

            PATH = new java.io.File(".").getCanonicalPath()+ "/src/modules/user/utils/admin/files/admin.xml";


            File path = new File(PATH);

            if (path.exists()) {
                Singleton.useradmin = (ArrayList<Admin>) xstream.fromXML(new FileReader(PATH));
            }
            else {
            	JOptionPane.showMessageDialog(null, "Error al leer el XML",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error al leer el XML",
            "Error", JOptionPane.ERROR_MESSAGE);
        }

        return Singleton.useradmin;
    }

	public static ArrayList <Admin> openjson() throws IOException {
		String PATH = null;
		String result=null;
    	Admin e1=new Admin();

        PATH = new java.io.File(".").getCanonicalPath()+ "/src/modules/user/utils/admin/files/admin.json";

    	 try {
    	        BufferedReader br = new BufferedReader(new FileReader(PATH));
    	        StringBuilder sb = new StringBuilder();
    	        String line = br.readLine();
    	        while (line != null) {
    	            sb.append(line);
    	            line = br.readLine();
    	        }
    	        result = sb.toString();
    	    } catch(Exception e) {
    	        e.printStackTrace();
    	        JOptionPane.showMessageDialog(null, "Error");
    	    }
        try {
        	  XStream xstream = new XStream(new JettisonMappedXmlDriver());
	          xstream.setMode(XStream.NO_REFERENCES);
			  xstream.alias("Admin", Admin.class);
			 
	               
	                Singleton.useradmin.clear();
	                
	                String jsonData = result;
	                JSONObject jobj = new JSONObject(jsonData);
	                JSONArray jarr = new JSONArray(jobj.getJSONArray("").toString());
	          
	            		  
	            	Gson json = new Gson();
	            	for (int i=0; i<jarr.length();i++) {
	            		e1 = (Admin) jarr.get(i);
	            		Singleton.useradmin.add(e1);
	            	}
	             /*
	                for (int i = 0; i < Singleton.useradmin.size(); i++) {
	                	e1 = (Admin) xstream.fromXML(new FileReader(PATH));    
	                	Singleton.useradmin.add(e1);
	                }
	               /* JsonReader lector = new JsonReader(new FileReader(PATH));
	                JsonParser parseador = new JsonParser();
	                JsonElement raiz = parseador.parse(lector);
	            		  
	            	Gson json = new Gson();
	            	JsonArray lista=raiz.getAsJsonArray();
	            	for (JsonElement elemento : lista) {
	            		e1 = json.fromJson(elemento, Admin.class);
	            		Singleton.useradmin.add(e1);
	            	}
	            	//Singleton.useradmin = (ArrayList <Admin>)xstream.fromXML(new FileReader(PATH));
	           */
        } catch (Exception e) {
        	JOptionPane.showMessageDialog(null, "Error al leer el JSON", "Error", JOptionPane.ERROR_MESSAGE);
        }
        return Singleton.useradmin;
		/*String PATH;
		 try {
	            XStream xstream = new XStream(new JettisonMappedXmlDriver());
	            xstream.setMode(XStream.NO_REFERENCES);
	            xstream.alias("Admin", Admin.class);
	            
	            PATH = new java.io.File("C:/Users/Alejandro/Documents/Programacio/workspace/Framework_Alejandro_Garcia/src/modules/user/utils/admin/files/admin.xml" 
	            		).getAbsolutePath();
	            
	            JsonReader lector = new JsonReader(new FileReader(PATH));
                JsonParser parseador = new JsonParser();
                JsonElement raiz = parseador.parse(lector);
                
                Gson json = new Gson();
                JsonArray lista = raiz.getAsJsonArray();

                for (JsonElement elemento : lista) {
                    Singleton.useradmin= (ArrayList<Admin>) json.fromJson(elemento, Admin.class);
                }

                JOptionPane.showMessageDialog(null,
                        "Archivo JSON abierto con Ã©xito", "Archivo JSON",
                        JOptionPane.INFORMATION_MESSAGE);
              
		 }catch (HeadlessException | JsonIOException | JsonSyntaxException | FileNotFoundException e) {
	            JOptionPane.showMessageDialog(null, "Error al leer el JSON",
	                    "Error", JOptionPane.ERROR_MESSAGE);
		 }
		 return Singleton.useradmin;*/
}

	public static ArrayList <Admin> opentxt(){
		String PATH = null;
        try {
            File f;
            PATH = new java.io.File(".").getCanonicalPath()+ "/src/modules/user/utils/admin/files/admin.txt";

                f = new File(PATH);
                
                FileInputStream fi=new FileInputStream(f);
    			ObjectInputStream oi=new ObjectInputStream(fi);
    			Singleton.useradmin = (ArrayList<Admin>)oi.readObject();
    			oi.close();
            
        } catch (Exception e) {
        	JOptionPane.showMessageDialog(null, "Error al leer el TXT", "Error", JOptionPane.ERROR_MESSAGE);
        }
    	return Singleton.useradmin;
	}

	public static ArrayList <Admin> openjson2(){
		String PATH = null;
		String result=null;
    	Admin e1=new Admin();

        try {
			PATH = new java.io.File(".").getCanonicalPath()+ "/src/modules/user/utils/admin/files/admin.json";
		} catch (IOException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		}

    	 try {
    	        BufferedReader br = new BufferedReader(new FileReader(PATH));
    	        StringBuilder sb = new StringBuilder();
    	        String line = br.readLine();
    	        while (line != null) {
    	            sb.append(line);
    	            line = br.readLine();
    	        }
    	        result = sb.toString();
    	    } catch(Exception e) {
    	        e.printStackTrace();
    	        JOptionPane.showMessageDialog(null, "Error");
    	    }
        try {
        	  XStream xstream = new XStream(new JettisonMappedXmlDriver());
	          xstream.setMode(XStream.NO_REFERENCES);
			  xstream.alias("Admin", Admin.class);
			 
	               
	                Singleton.useradmin.clear();
	                
	                String jsonData = result;
	                JSONObject jobj = new JSONObject(jsonData);
	                JSONArray jarr = new JSONArray(jobj.getJSONArray("").toString());
	          
	            		  
	            	Gson json = new Gson();
	            	for (int i=0; i<jarr.length();i++) {
	            		e1 = (Admin) jarr.get(i);
	            		Singleton.useradmin.add(e1);
	            	}
	             /*
	                for (int i = 0; i < Singleton.useradmin.size(); i++) {
	                	e1 = (Admin) xstream.fromXML(new FileReader(PATH));    
	                	Singleton.useradmin.add(e1);
	                }
	               /* JsonReader lector = new JsonReader(new FileReader(PATH));
	                JsonParser parseador = new JsonParser();
	                JsonElement raiz = parseador.parse(lector);
	            		  
	            	Gson json = new Gson();
	            	JsonArray lista=raiz.getAsJsonArray();
	            	for (JsonElement elemento : lista) {
	            		e1 = json.fromJson(elemento, Admin.class);
	            		Singleton.useradmin.add(e1);
	            	}
	            	//Singleton.useradmin = (ArrayList <Admin>)xstream.fromXML(new FileReader(PATH));
	           */
        } catch (Exception e) {
        	JOptionPane.showMessageDialog(null, "Error al leer el JSON", "Error", JOptionPane.ERROR_MESSAGE);
        }
        return Singleton.useradmin;
	}

}